title: Keyboard layout customization with Xmodmap and Xcape
---
pub_date: 2017-01-17
---
author: Khamidulla Inoyatov
---
body:

Recently I got notification from github.com related to **Xcape** [issue](https://github.com/alols/xcape/issues/40#issuecomment-272756376) which I create two years ago. For though of you who does not have any knowledge about **Xcape**, I want to provide a small explanation here.
Xcape little utility application which allows using a modifier key as another key when pressed and released while in the long press it will do its functionality. In example if you modify your `<Ctrl-L>` with **Xcape** it can act as `<Escape>` or any other not modifier key. Because modifier keys require long press while another key requires press and release.
At that time I do not have sufficient knowledge about this tool. As consequence, I end up by asking the question about how I can map `<Return>` key in the long press to `<Ctrl-R>`. But this tool works another way around. You can only map modifier key (`<Alt>`, `<Ctrl>`, and etc.) to other not modifier key (`<Escape>`, `<Caps-Lock>`, and etc.). So, after several days of searching the Internet in order to full fill my desire I came up with idea that if I cannot change `<Return>` key with **Xcape** then I will do things another way around. Simple steps as following:
1. Swap location of `<Ctrl-L>` with `<Return>`
2. Using **Xcape** assign single press to `<Ctrl-R>` as `<Return>`

In order to accomplish the first step I used `xmodmap` (Detailed information can found using `man xmodmap` command in console) first I dump current keybindings using `xmodmap` as following under home directory:
```
xmodmap -pke > ~/.xmodmap-original
xmodmap -pm >> ~/.xmodmap-original
```
Then I edited the end of `.xmodmap-original` file, as explained [here](https://wiki.archlinux.org/index.php/xmodmap). 

From
```
....
xmodmap:  up to 4 keys per modifier, (keycodes in parentheses):

shift       Shift_L (0x32),  Shift_R (0x3e)
lock        Caps_Lock (0x42)
control     Control_L (0x25),  Control_R (0x69)
mod1        Alt_L (0x40),  Alt_R (0x6c),  Meta_L (0xcd)
mod2        Num_Lock (0x4d)
mod3      
mod4        Super_L (0x85),  Super_R (0x86),  Super_L (0xce),  Hyper_L (0xcf)
mod5        ISO_Level3_Shift (0x5c),  Mode_switch (0xcb)
```
to
```
....  
clear shift
clear lock
clear control
clear mod1
clear mod2
clear mod4
clear mod5

add shift   = Shift_L Shift_R
add lock    = Caps_Lock
add control = Control_L Control_R
add mod1    = Alt_L Alt_R Meta_L
add mod2    = Num_Lock
add mod4    = Super_L Super_R Super_L Hyper_L
add mod5    = ISO_Level3_Shift Mode_switch
```
Next I copied `~/.xmodmap-original` to `~/.xmodmap-cutom`.
```
cp ~/.xmodmap-original ~/.xmodmap-custom
```
Afterwards i swapped key codes of `<Return>` key and `<Ctrl-R>`.
From
```
....
keycode 36 = Return NoSymbol Return
....
keycode 105 = Control_R NoSymbol Control_R
....
```
to
```
....
keycode 36 = Control_R NoSymbol Control_R
....
keycode 105 = Return NoSymbol Return
....
```
Note in your case key code values can be different. You can find key codes on your keyboard using `xev` command. More information can be found using `man xev` in the terminal console.

In second step I wrote small bash script function and place into `~/.bashrc` under local user. Contents of this function look like this:
```
# Keyboard switch
function keyboard() {
	case $1 in
		custom)
			echo "Modified layout"
			xmodmap ~/.xmodmap-custom
			xcape -t 200 -e "Control_R=Return"
			;;
		original) 
			echo "Original layout"
			killall xcape
			xmodmap ~/.xmodmap-original
			;;
		*)
			echo "No layout found for this command"
			;;
	esac
}
```
Afterward, I updated terminal locals using `source ~/.bashrc`. From this point on if I want to change the keyboard layout to custom I just type `keyboard custom`. And if my colleagues want to type on my keyboard i changed it by executing this command `keyboard original`. 
This approach is the best if you have an only single layout. However, I am using three layouts "Russian", "Korean" and "English". So when I switch between layouts all modifications broken :(. I found other solution using `XKB` config file modification which is permanent. It is not possible to change back as `xmodmap` case. Currently, I am not using either because I ended up by buying **HHKB Professional2** with the [alternative controller](https://geekhack.org/index.php?topic=12047.0). So if you have other work around to this particular topic fill free to contact. :)
